##############################
#    FUZZY FINDER PLUGINS    #
##############################
# {{{
[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'xiyaowong/telescope-emoji.nvim'

[[plugins]]
repo = 'kyazdani42/nvim-web-devicons'

[[plugins]]
repo  = 'nvim-telescope/telescope-fzf-native.nvim'
build = 'make'

[[plugins]]
repo = 'fannheyward/telescope-coc.nvim'

[[plugins]]
repo = 'TC72/telescope-tele-tabby.nvim'

[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
on_event = ['BufRead']
depends = [
  'plenary.nvim',
  'telescope-emoji.nvim',
  'nvim-web-devicons',
  'telescope-fzf-native.nvim',
  'telescope-coc.nvim',
]
hook_source = '''
lua << EOF
-- Import
local themes = require("telescope.themes")
local actions = require("telescope.actions")

-- General configuration
require("telescope").setup{
  defaults = {
    prompt_prefix = ">>> ",
    selection_caret = "  ",
    shorten_path = true,
    color_devicons = true,
    winblend = 10,
    set_env = {['COLORTERM'] = 'truecolor'},
    mappings = {
      n = {
        ["t"] = actions.select_tab,
        ["q"] = actions.close,
        ["dd"] = actions.delete_buffer,
        ["<C-q>"] = actions.send_selected_to_qflist + actions.open_qflist,
        ["<S-q>"] = actions.send_to_qflist + actions.open_qflist,
      },
      i = {
        ["<C-q>"] = actions.send_selected_to_qflist + actions.open_qflist,
        ["<S-q>"] = actions.send_to_qflist + actions.open_qflist,
      },
    },
  },
  pickers = {
    find_files = themes.get_dropdown({ layout_config = {height = 15, width = 100}, hidden = true}),
    live_grep = themes.get_dropdown({ layout_config = {height = 15, width = 100}}),
    buffers = themes.get_dropdown({ layout_config = {height = 15, width = 100}, initial_mode = 'normal'}),
    git_status = themes.get_dropdown({ layout_config = {height = 15, width = 100}}),
    emoji = themes.get_dropdown({ layout_config = {height = 15, width = 120}}),
    grep_string = themes.get_dropdown({ layout_config = {height = 15, width = 100}}),
    oldfiles = themes.get_dropdown({ layout_config = {height = 15, width = 100}}),
  },
  extensions = {
    fzf = {
      fuzzy = true,
      override_generic_sorter = false,
      override_file_sorter = true,
      case_mode = "smart_case",
    }
  }
}

-- Add extentions
require('telescope').load_extension('fzf')
require("telescope").load_extension("emoji")
require("telescope").load_extension("coc")
EOF
'''
hook_add = '''
" shortcut setting
nnoremap <silent> <C-f>f <cmd>Telescope find_files<CR>
nnoremap <silent> <C-f>r <cmd>Telescope oldfiles<CR>
nnoremap <silent> <C-f>g <cmd>Telescope git_status<CR>
nnoremap <silent> <C-f><C-g> <cmd>Telescope live_grep<CR>
nnoremap <silent> <C-f>b <cmd>Telescope buffers<CR>
nnoremap <silent> <C-f>e <cmd>Telescope emoji<CR>
nnoremap <silent> <C-f>q <cmd>Telescope coc diagnostics theme=dropdown layout_config={"height":15,"width":120}<CR>
nnoremap <silent> <C-f>* <cmd>Telescope grep_string<CR>
nnoremap <silent> <C-f>/ :lua require("telescope.builtin").live_grep({search_dirs={vim.fn.expand("%:p")}, previewer=false, path_display={shorten=1}})<CR>
nnoremap <silent> <C-f><C-f> <cmd>Telescope resume<CR>
'''
# }}}

#############################
#      SOURCE ON EVENT      #
#############################
# {{{
[[plugins]]
repo = 'mg979/vim-visual-multi'
on_event = 'CursorMoved'
hook_source = '''
let g:VM_maps = {}
let g:VM_maps['Find Under'] = '<space>n'
let g:VM_maps['Find Subword Under'] = '<space>n'
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
# fix version since highlight of sign column does not work well
rev = 'c27bfab8c51e77419ee0c4a9c4e3ba359dbc2ad4'
on_event = ['RooterChDir']
hook_add = '''
nmap <Space>ht :GitGutterLineHighlightsToggle<CR>
nmap <Space>ha <Plug>(GitGutterStageHunk)
nmap <Space>hu <Plug>(GitGutterUndoHunk)
nmap <Space>hn <Plug>(GitGutterNextHunk)zz
nmap <Space>hp <Plug>(GitGutterPrevHunk)zz
set signcolumn=yes
set updatetime=100
'''
hook_source = '''
let g:gitgutter_sign_added = '+'
let g:gitgutter_sign_modified = '-'
let g:gitgutter_sign_removed = 'x'
let g:gitgutter_terminal_reports_focus = 0
if executable('rg')
  let g:gitgutter_grep = 'rg'
endif
'''
# }}}

#############################
#  SOURCE ON MAP & COMMAND  #
#############################
# {{{
[[plugins]]
repo     = 'junegunn/vim-easy-align'
on_map   = '<Plug>(EasyAlign)'
hook_add = 'vmap <Enter> <Plug>(EasyAlign)'

[[plugins]]
repo = 'LeafCage/yankround.vim'
on_map = '<Plug>(yankround-'
hook_add = '''
nmap p <Plug>(yankround-p)
xmap p <Plug>(yankround-p)
nmap P <Plug>(yankround-P)
nmap gp <Plug>(yankround-gp)
xmap gp <Plug>(yankround-gp)
nmap gP <Plug>(yankround-gP)
nmap <C-p> <Plug>(yankround-prev)
nmap <C-n> <Plug>(yankround-next)
'''

[[plugins]]
repo = 'kyazdani42/nvim-tree.lua'
on_cmd = ['NvimTreeToggle']
hook_source = '''
lua << EOF
require('nvim-tree').setup {}
EOF
'''
hook_add = '''
let g:nvim_tree_icons = {
  \ 'default': '',
  \ 'symlink': '',
  \ 'git': {
  \   'unstaged': "✗",
  \   'staged': "✓",
  \   'unmerged': "",
  \   'renamed': "➜",
  \   'untracked': "★",
  \   'deleted': "",
  \   'ignored': "◌"
  \   },
  \ 'folder': {
  \   'arrow_open': "",
  \   'arrow_closed': "",
  \   'default': "",
  \   'open': "",
  \   'empty': "",
  \   'empty_open': "",
  \   'symlink': "",
  \   'symlink_open': "",
  \   }
  \ }
nnoremap <Space><Space> :NvimTreeToggle<CR>
'''

# }}}

#############################
#    SOURCE ON FILETYPE     #
#############################
# {{{
[[plugins]]
repo = 'heavenshell/vim-pydocstring'
on_ft = 'python'
hook_add = '''
nmap <silent> <C-_> <Plug>(pydocstring)
'''
build = 'make install'
hook_source = '''
let g:pydocstring_formatter = 'google'
'''

[[plugins]]
repo  = 'masukomi/vim-markdown-folding'
on_ft = 'markdown'

[[plugins]]
repo        = 'elzr/vim-json'
on_ft       = 'json'
hook_add    = 'let g:vim_json_syntax_conceal = 0'

[[plugins]]
repo  = 'tmhedberg/SimpylFold'
on_ft = 'python'

[[plugins]]
repo  = 'Vimjas/vim-python-pep8-indent'
on_ft = 'python'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo    = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']
on_ft   = ['toml', 'markdown']

[[plugins]]
repo  = 'thinca/vim-qfreplace'
on_ft = ['qf']
# }}}
