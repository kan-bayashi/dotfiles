#############################
#    COMPLETION PLUGINS     #
#############################
# {{{
[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertEnter'
hook_source = '''
  " <TAB> and <S-TAB>: select items
  inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
  inoremap <expr><S-TAB>  pumvisible() ? "\<C-p>" : "\<S-TAB>"
  inoremap <expr><CR>  pumvisible() ? deoplete#close_popup() : "<CR>"

  " basic setting
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#enable_smart_case = 1
  let g:deoplete#enable_ignore_case = 0
  let g:deoplete#enable_camel_case = 0
  let g:deoplete#auto_complete_delay = 0
  let g:deoplete#auto_complete_start_length = 1
  let g:deoplete#min_pattern_length = 1
  let g:deoplete#auto_refresh_delay = 20
  let g:deoplete#enable_refresh_always = 0
  let g:deoplete#sources#jedi#server_timeout = 60

  " completion setting
  let g:deoplete#keyword_patterns = {}
  let g:deoplete#keyword_patterns._ = '[a-zA-Z_]\k*\(?'
  let g:deoplete#omni#input_patterns = {}
  let g:deoplete#omni#input_patterns.python = ''
  let g:deoplete#omni#functions = {}
  let g:deoplete#omni_patterns = {}
'''

# --- deoplete sources ---
[[plugins]]
repo = 'kan-bayashi/deoplete-jedi'
on_ft = 'python'

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'

[[plugins]]
repo = 'ujihisa/neco-look'
on_source = ['deoplete.nvim']

[[plugins]]
repo = 'Shougo/neco-syntax'
on_source = ['deoplete.nvim']
# }}}

#############################
#       LINTER PLUGINS      #
#############################
# {{{
[[plugins]]
repo = 'w0rp/ale'
hook_source = '''
  nmap <silent> <SPACE>j <Plug>(ale_next_wrap)
  nmap <silent> <SPACE>k <Plug>(ale_previous_wrap)
  let g:ale_linters = {
    \ 'python': ['flake8'],
    \ 'sh': ['shellcheck'],
    \ }
  let g:ale_python_flake8_args="--max-line-length=120"
  let g:ale_open_list = 0
  let g:ale_list_window_size = 5
  let g:ale_lint_delay = 1000
  let g:ale_lint_on_enter = 0
  let g:ale_echo_msg_error_str = '[ERROR]'
  let g:ale_echo_msg_warning_str = '[WARNING]'
  let g:ale_echo_msg_format = '%severity% %linter% - %s'
  let g:ale_sign_error = "\uf41b"
  let g:ale_sign_warning = "\uf420"

  " auto close error popup
  autocmd QuitPre * if empty(&bt) | lclose | endif
'''
# }}}

####################################
#    FILETYPE DEPENDENT PLUGINS    #
####################################
# {{{
# --- markdown related ---
[[plugins]]
repo = 'tpope/vim-markdown'
on_ft = 'markdown'
hook_source = '''
  let g:markdown_syntax_conceal = 0
'''

# --- toml related ---
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

# --- json related ---
[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'
hook_source = '''
  let g:vim_json_syntax_conceal = 0
'''

# --- python related ---
[[plugins]]
repo = 'tmhedberg/SimpylFold'
on_ft = 'python'

[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'
on_ft = 'python'

[[plugins]]
repo = 'hdima/python-syntax'
on_ft = 'python'
hook_source = '''
  let g:python_highlight_all = 1
  let g:python_version_3 = 1
'''

[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = 'python'
hook_source = '''
  let g:jedi#auto_vim_configuration = 0
  let g:jedi#smart_auto_mapping = 0
  let g:jedi#completions_enabled = 0
  let g:jedi#use_tabs_not_buffers = 1
  let g:jedi#rename_command = '<leader>m'
  let g:jedi#documentation_command = '<leader>k'
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']
on_ft = ['toml', 'markdown']
# }}}

#############################
#      TESTER PLUGINS       #
#############################
# {{{
[[plugins]]
repo = 'tpope/vim-dispatch'

[[plugins]]
repo = 'aliev/vim-compiler-python'

[[plugins]]
repo = 'janko-m/vim-test'
on_ft = 'python'
depends = ['vim-dispatch', 'vim-compiler-python']
hook_source = '''
  let g:test#strategy = "dispatch"
'''
# }}}
