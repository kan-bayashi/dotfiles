#############################
#         REQUIRED!         #
#############################
# {{{
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'roxma/nvim-yarp'
if = '''!has('nvim')'''

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = '''!has('nvim')'''
# }}}

#############################
#    APPEARANCE PLUGINS     #
#############################
# {{{
[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
    let g:airline#extensions#tabline#enabled = 1
    let g:airline#extensions#tabline#left_sep = ' '
    let g:airline#extensions#tabline#left_alt_sep = '|'
    let g:airline_theme = 'powerlineish'
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = 'let g:indentLine_color_term = 239'

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'nanotech/jellybeans.vim'
# }}}

#############################
#       OTHER PLUGINS       #
#############################
# {{{
[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  set splitbelow
  let g:quickrun_config = {
   \ "_" : { "outputter/buffer/split" : ":botright 10",
   \         "runner" : "vimproc",
   \         "runner/vimproc/updatetime" : 40 }
   \ }
'''

[[plugins]]
repo = 'christoomey/vim-tmux-navigator'
hook_add = '''
  " keymappig for terminal in vim
  if has('terminal')
    tmap <c-k> <c-w>:TmuxNavigateUp<cr>
    tmap <c-j> <c-w>:TmuxNavigateDown<cr>
    tmap <c-h> <c-w>:TmuxNavigateLeft<cr>
    tmap <c-l> <c-w>:TmuxNavigateRight<cr>
  endif
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'thinca/vim-qfreplace'

[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'Raimondi/delimitMate'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'mhinz/vim-startify'

[[plugins]]
repo = 'ConradIrwin/vim-bracketed-paste'

[[plugins]]
repo = 'Konfekt/FastFold'
hook_add = 'let g:fastfold_fold_command_suffixes = []'

[[plugins]]
repo = 'wincent/vim-clipper'
if = '$OS == "mac"'

[[plugins]]
repo = 'roxma/vim-tmux-clipboard'

[[plugins]]
repo     = 'airblade/vim-rooter'
hook_add = 'let g:rooter_silent_chdir = 1'

[[plugins]]
repo = 'kana/vim-submode'
hook_add = '''
  let g:submode_keep_leaving_key = 1
  call submode#enter_with('tabmove', 'n', '', 'tl', 'gt')
  call submode#enter_with('tabmove', 'n', '', 'th', 'gT')
  call submode#map('tabmove', 'n', '', 'l', 'gt')
  call submode#map('tabmove', 'n', '', 'h', 'gT')
  call submode#enter_with('buffermove', 'n', '', 'bl', ':bnext<CR>')
  call submode#enter_with('buffermove', 'n', '', 'bh', ':bprev<CR>')
  call submode#map('buffermove', 'n', '', 'l', ':bnext<CR>')
  call submode#map('buffermove', 'n', '', 'h', ':bprev<CR>')
'''

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
  " key mapping
  nmap <silent> <SPACE>j <Plug>(ale_next_wrap)
  nmap <silent> <SPACE>k <Plug>(ale_previous_wrap)

  " general settings
  let g:ale_open_list = 0
  let g:ale_list_window_size = 5
  let g:ale_lint_delay = 1000
  let g:ale_lint_on_enter = 0

  " custom message and sign
  let g:ale_echo_msg_error_str = '[ERROR]'
  let g:ale_echo_msg_warning_str = '[WARNING]'
  let g:ale_echo_msg_format = '%severity% %linter% - %s'
  let g:ale_sign_error = "\uf41b"
  let g:ale_sign_warning = "\uf420"

  " linter setting
  let g:ale_linters = {
    \ 'python': ['flake8'],
    \ 'sh': ['shellcheck'],
    \ }
  let g:ale_python_flake8_args="--max-line-length=120"
'''
# }}}
